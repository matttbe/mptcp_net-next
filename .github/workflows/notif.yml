name: "Notifications"
on:
  push:
    tags:
      - 'export/**'   # exclude patchew/** tags and branches
      - 'export-net/**'
  issues:
    types: [opened, reopened, closed, assigned, unassigned]
  workflow_run:
    workflows: ["MPTCP Upstream Build Validation", "Update TopGit tree"]
    types:
      - completed

env:
  CURL_OPT: "--no-progress-meter --connect-timeout 30 --retry 20 --retry-delay 10"
  CURL_ACC: "Accept: application/vnd.github.v3+json"
  URI: "https://api.github.com"
  PW: "https://patchwork.kernel.org/api/1.2"

permissions: {}

jobs:
  tag:
    name: "Tag"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: tag shortner
        id: tag
        run: |
          echo "tag=${REF:10}" >> ${GITHUB_OUTPUT}
        env:
          REF: ${{ github.event.ref }}
      - name: irc tag
        uses: rectalogic/notify-irc@v2
        with:
          server: irc.libera.chat
          channel: "#mptcp-ci"
          nickname: gh-tag-bot
          verbose: true
          message: "New tag available: ${{ steps.tag.outputs.tag }} (by ${{ github.actor }})"

  issues:
    name: "Issues"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'issues'
    runs-on: ubuntu-latest
    steps:
      - name: issue info
        id: info
        if: github.event.action != 'opened'
        run: |
          echo "opener=, opened by ${OPENER}" >> ${GITHUB_OUTPUT}
          echo "assignee=${ASSIGNEE:+ and assigned to ${ASSIGNEE}}" >> ${GITHUB_OUTPUT}
        env:
          OPENER: ${{ github.event.issue.user.login }}
          ASSIGNEE: ${{ github.event.assignee.login }}
      - name: irc issues
        uses: rectalogic/notify-irc@v2
        with:
          server: irc.libera.chat
          channel: "#mptcp"
          nickname: gh-issues-bot
          verbose: true
          message: |-
            Issue #${{ github.event.issue.number }} ("${{ github.event.issue.title }}"${{ steps.info.outputs.opener }}${{ steps.info.outputs.assignee }}) has been ${{ github.event.action }} by ${{ github.actor }}
            ${{ github.event.issue.html_url }}

  build:
    name: "Build"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'workflow_run' && github.event.workflow_run.name == 'MPTCP Upstream Build Validation'
    runs-on: ubuntu-latest
    steps:
      - name: get linked tag
        id: tag
        run: |
          TAG=$(curl ${CURL_OPT} -H "${CURL_ACC}" -H "${CURL_AUTH}" "${URL}" | jq -r ".[] | select(.object.sha == \"${SHA}\").ref" | tail -n1)
          echo "Found: ${TAG} (${SHA} - ${BRANCH})"
          TAG="${TAG:10}"
          echo "tag=${TAG:-${BRANCH}}" >> ${GITHUB_OUTPUT}
        env:
          CURL_AUTH: "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          URL: "${{ env.URI }}/repos/${{ github.repository }}/git/matching-refs/tags/"
          SHA: "${{ github.event.workflow_run.head_sha }}"
          BRANCH: "${{ github.event.workflow_run.head_branch }}"

      - name: irc build
        if: startsWith(steps.tag.outputs.tag, 'export/') || startsWith(steps.tag.outputs.tag, 'export-net/')
        uses: rectalogic/notify-irc@v2
        with:
          server: irc.libera.chat
          channel: "#mptcp-ci"
          nickname: gh-build-bot
          verbose: true
          message: |-
            New build validating ${{ steps.tag.outputs.tag }} (by ${{ github.actor }}) ended with ${{ github.event.workflow_run.conclusion }}: ${{ github.event.workflow_run.html_url }}

  build-error:
    name: "Build Error"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'workflow_run' && github.event.workflow_run.name == 'MPTCP Upstream Build Validation' && github.event.workflow_run.conclusion != 'success'
    runs-on: ubuntu-latest
    steps:
      - name: get linked tag
        id: tag
        run: |
          TAG=$(curl ${CURL_OPT} -H "${CURL_ACC}" -H "${CURL_AUTH}" "${URL}" | jq -r ".[] | select(.object.sha == \"${SHA}\").ref" | tail -n1)
          echo "Found: ${TAG} (${SHA} - ${BRANCH})"
          TAG="${TAG:10}"
          echo "tag=${TAG:-${BRANCH}}" >> ${GITHUB_OUTPUT}
        env:
          CURL_AUTH: "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          URL: "${{ env.URI }}/repos/${{ github.repository }}/git/matching-refs/tags/"
          SHA: "${{ github.event.workflow_run.head_sha }}"
          BRANCH: "${{ github.event.workflow_run.head_branch }}"

      - name: irc build
        if: startsWith(steps.tag.outputs.tag, 'export/') || startsWith(steps.tag.outputs.tag, 'export-net/')
        uses: rectalogic/notify-irc@v2
        with:
          server: irc.libera.chat
          channel: "#mptcp"
          nickname: gh-build-bot
          verbose: true
          message: |-
            New build validating ${{ steps.tag.outputs.tag }} (by ${{ github.actor }}) failed: ${{ github.event.workflow_run.conclusion }}: ${{ github.event.workflow_run.html_url }}

      - name: get commit info
        if: startsWith(steps.tag.outputs.tag, 'patchew/')
        id: commit
        run: |
          curl ${CURL_OPT} -H "${CURL_ACC}" -H "${CURL_AUTH}" "${URL}" > commit.json

          read -r TAG MID < <(jq -r '.message' commit.json | grep "^Message-Id: " | tail -n1)
          echo "Found message ID: '${TAG}' '${MID}'"
          echo "mid=${MID:1:-1}" >> ${GITHUB_OUTPUT}

          SUBJECT=$(jq -r '.message' commit.json | head -n1)
          echo "Found subject: '${SUBJECT}'"
          echo "subject=${SUBJECT}" >> ${GITHUB_OUTPUT}

          NAME=$(jq -r '.author.name' commit.json)
          EMAIL=$(jq -r '.author.email' commit.json)
          echo "Found author: '${NAME}' '${EMAIL}'"
          echo "name=${NAME%% *}" >> ${GITHUB_OUTPUT}
          echo "author=${NAME} <${EMAIL}>" >> ${GITHUB_OUTPUT}

          SHA="${{ github.event.workflow_run.head_sha }}"
          echo "sha=${SHA:0:12}" >> ${GITHUB_OUTPUT}
        env:
          CURL_AUTH: "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
          URL: "${{ env.URI }}/repos/${{ github.repository }}/git/commits/${{ github.event.workflow_run.head_sha }}"

      - name: send email
        if: startsWith(steps.tag.outputs.tag, 'patchew/')
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.MAIL_USERNAME }}
          password: ${{ secrets.MAIL_PASSWORD }}
          to: ${{ steps.commit.outputs.author }}
          cc: mptcp@lists.linux.dev
          from: MPTCP CI
          reply_to: mptcp@lists.linux.dev
          in_reply_to: "<${{ steps.commit.outputs.mid }}>"
          subject: "Re: ${{ steps.commit.outputs.subject }}: Build Failure"
          body: |
            Hi ${{ steps.commit.outputs.name }},

            Thank you for your modifications, that's great!

            But sadly, our CI spotted some issues with it when trying to build it.

            You can find more details there:

              https://patchwork.kernel.org/project/mptcp/patch/${{ steps.commit.outputs.mid }}/
              ${{ github.event.workflow_run.html_url }}

            Status: ${{ github.event.workflow_run.conclusion }}
            Initiator: ${{ github.actor }}
            Commits: https://github.com/${{ github.repository }}/commits/${{ steps.commit.outputs.sha }}

            Feel free to reply to this email if you cannot access logs, if you need
            some support to fix the error, if this doesn't seem to be caused by your
            modifications or if the error is a false positive one.

            Cheers,
            MPTCP GH Action bot
            Bot operated by Matthieu Baerts (NGI0 Core)

  topgit:
    name: "TopGit"
    if: github.repository_owner == 'multipath-tcp' && github.event_name == 'workflow_run' && github.event.workflow_run.name == 'Update TopGit tree' && github.event.workflow_run.conclusion != 'success'
    runs-on: ubuntu-latest
    steps:
      - name: irc topgit
        uses: rectalogic/notify-irc@v2
        with:
          server: irc.libera.chat
          channel: "#mptcp"
          nickname: gh-topgit-bot
          verbose: true
          message: |-
            New sync with latest net-next failed (initiated by ${{ github.actor }}): ${{ github.event.workflow_run.conclusion }}: ${{ github.event.workflow_run.html_url }}
